<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ajouter des Cours Vidéos</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            background-color: #f0f4f8;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            padding-top: 20px;
        }
        .container {
            background-color: #ffffff;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
        }
        h1, h2, h3 {
            color: #1565c0;
        }
        .card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }
        .card-header {
            background-color: #e3f2fd;
            border-bottom: none;
            font-weight: bold;
            color: #1565c0;
        }
        .session {
            background-color: #f1f3f5;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
        }
        .btn-custom {
            background-color: #4caf50;
            border: none;
            color: white;
        }
        .btn-custom:hover {
            background-color: #45a049;
        }
        .upcoming-courses {
            margin-top: 40px;
        }
        .course-item {
            background-color: #e9ecef;
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 15px;
        }
        .session-item {
            background-color: #ffffff;
            border-radius: 8px;
            padding: 10px;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <%- include('header') %>
    <div class="container">
        <h1 class="text-center mb-4">Ajouter des Cours Vidéos</h1>
        <form action="/save-video-course" method="post">
            <div class="card mb-4">
                <div class="card-header">
                    <h2 class="mb-0"><i class="fas fa-video me-2"></i>Informations du Cours</h2>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="courseTitle" class="form-label">Titre du Cours</label>
                        <input type="text" class="form-control" id="courseTitle" name="courseTitle" required>
                    </div>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header">
                    <h2 class="mb-0"><i class="fas fa-calendar-alt me-2"></i>Sessions</h2>
                </div>
                <div class="card-body" id="sessions">
                    <div class="session">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="sessionDate" class="form-label">Date</label>
                                <input type="date" class="form-control" id="sessionDate" name="sessionDate[]" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="sessionTime" class="form-label">Heure de Début</label>
                                <input type="time" class="form-control" id="sessionTime" name="sessionTime[]" required>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="sessionDuration" class="form-label">Durée (en minutes)</label>
                            <input type="number" class="form-control" id="sessionDuration" name="sessionDuration[]" required>
                        </div>
                        <div class="mb-3">
                            <label for="sessionDetails" class="form-label">Détails</label>
                            <textarea class="form-control" id="sessionDetails" name="sessionDetails[]" rows="3" required></textarea>
                        </div>
                        
                    </div>
                </div>
            </div>

            <div class="text-center mb-4">
                <button type="button" id="addSession" class="btn btn-secondary">
                    <i class="fas fa-plus me-2"></i>Ajouter une Session
                </button>
            </div>

            <div class="text-center">
                <button type="submit" class="btn btn-custom btn-lg">
                    <i class="fas fa-save me-2"></i>Enregistrer le Cours Vidéo
                </button>
            </div>
        </form>
    </div>

    <div class="container upcoming-courses">
        <h2 class="text-center mb-4"><i class="fas fa-clock me-2"></i>Cours Vidéo à Venir</h2>
        <% if (typeof courses !== 'undefined' && courses.length > 0) { %>
            <% courses.forEach(course => { %>
                <div class="card course-item">
                    <div class="card-header">
                        <h3 class="mb-0"><%= course.title %></h3>
                    </div>
                    <div class="card-body">
                        <% course.sessions.forEach(session => { %>
                            <div class="session-item">
                                <p><i class="fas fa-calendar me-2"></i><strong>Date:</strong> <%= new Date(session.date).toLocaleString() %></p>
                                <p><i class="fas fa-clock me-2"></i><strong>Durée:</strong> <%= session.duration %> minutes</p>
                                <p><i class="fas fa-info-circle me-2"></i><strong>Détails:</strong> <%= session.details %></p>
                                <a href="/video-session/<%= session._id %>" class="btn btn-primary btn-sm" target="_blank">
                                    <i class="fas fa-video me-2"></i>Rejoindre le Salon Vidéo
                                </a>
                                <p class="mt-2">
                                    <i class="fas fa-hourglass-start me-2"></i><strong>Compte à rebours:</strong> 
                                    <span id="countdown-<%= session._id %>" data-date="<%= session.date %>"></span>
                                </p>
                                <div class="mt-3">
                                    <button class="btn btn-danger btn-sm delete-video-course" data-course-id="<%= course._id %>">
                                        <i class="fas fa-trash me-2"></i>Supprimer
                                    </button>
                                    <button class="btn btn-primary btn-sm edit-video-course" data-course-id="<%= course._id %>">
                                        <i class="fas fa-edit me-2"></i>Modifier
                                    </button>
                                </div>

                            </div>
                        <% }) %>
                    </div>
                </div>
            <% }) %>
        <% } else { %>
            <p class="text-center alert alert-info">Aucun cours vidéo à venir.</p>
        <% } %>
    </div>




    <div class="modal fade" id="editVideoCourseModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Modifier le Cours Vidéo</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editVideoCourseForm">
                        <input type="hidden" id="editCourseId">
                        <div class="mb-3">
                            <label for="editCourseTitle" class="form-label">Titre du Cours</label>
                            <input type="text" class="form-control" id="editCourseTitle" required>
                        </div>
                        <div id="editSessions">
                            <!-- Les sessions seront ajoutées dynamiquement ici -->
                        </div>
                        <button type="button" id="addEditSession" class="btn btn-secondary mt-3">
                            <i class="fas fa-plus me-2"></i>Ajouter une Session
                        </button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                    <button type="button" class="btn btn-primary" id="saveEditVideoCourse">Enregistrer les modifications</button>
                </div>
            </div>
        </div>
    </div>




    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById('addSession').addEventListener('click', function () {
            var sessionDiv = document.createElement('div');
            sessionDiv.classList.add('session');
            sessionDiv.innerHTML = `
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="sessionDate" class="form-label">Date</label>
                        <input type="date" class="form-control" id="sessionDate" name="sessionDate[]" required>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="sessionTime" class="form-label">Heure de Début</label>
                        <input type="time" class="form-control" id="sessionTime" name="sessionTime[]" required>
                    </div>
                </div>
                <div class="mb-3">
                    <label for="sessionDuration" class="form-label">Durée (en minutes)</label>
                    <input type="number" class="form-control" id="sessionDuration" name="sessionDuration[]" required>
                </div>
                <div class="mb-3">
                    <label for="sessionDetails" class="form-label">Détails</label>
                    <textarea class="form-control" id="sessionDetails" name="sessionDetails[]" rows="3" required></textarea>
                </div>
            `;
            document.getElementById('sessions').appendChild(sessionDiv);
        });

        // Script de compte à rebours
        const countdownElements = document.querySelectorAll('[id^="countdown-"]');
        countdownElements.forEach(element => {
            const sessionId = element.id.split('-')[1];
            const sessionDate = new Date(element.dataset.date);
            setInterval(() => {
                const now = new Date().getTime();
                const distance = sessionDate - now;
                if (distance < 0) {
                    element.innerHTML = "Le cours a commencé!";
                } else {
                    const days = Math.floor(distance / (1000 * 60 * 60 * 24));
                    const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                    const seconds = Math.floor((distance % (1000 * 60)) / 1000);
                    element.innerHTML = `${days}j ${hours}h ${minutes}m ${seconds}s`;
                }
            }, 1000);
        });


        document.addEventListener('DOMContentLoaded', function() {
    // Suppression d'un cours vidéo
    document.querySelectorAll('.delete-video-course').forEach(button => {
        button.addEventListener('click', function() {
            const courseId = this.getAttribute('data-course-id');
            if (confirm('Êtes-vous sûr de vouloir supprimer ce cours vidéo ?')) {
                deleteVideoCourse(courseId);
            }
        });
    });

    // Modification d'un cours vidéo
    document.querySelectorAll('.edit-video-course').forEach(button => {
        button.addEventListener('click', function() {
            const courseId = this.getAttribute('data-course-id');
            openEditModal(courseId);
        });
    });

    // Fonction pour supprimer un cours vidéo
    function deleteVideoCourse(courseId) {
        fetch(`/delete-video-course/${courseId}`, {
            method: 'DELETE',
        })
        .then(response => response.json())
        .then(data => {
            if (data.message === 'Cours vidéo supprimé avec succès') {
                const courseElement = document.querySelector(`[data-course-id="${courseId}"]`).closest('.course-item');
                courseElement.remove();
                alert('Cours vidéo supprimé avec succès');
            } else {
                alert('Erreur lors de la suppression du cours vidéo');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Une erreur est survenue lors de la suppression du cours vidéo');
        });
    }

    // Fonction pour ouvrir le modal de modification
    function openEditModal(courseId) {
        fetch(`/edit-video-course/${courseId}`)
        .then(response => response.json())
        .then(course => {
            document.getElementById('editCourseId').value = course._id;
            document.getElementById('editCourseTitle').value = course.title;
            const sessionsContainer = document.getElementById('editSessions');
            sessionsContainer.innerHTML = '';
            course.sessions.forEach((session, index) => {
                addEditSessionForm(sessionsContainer, session, index);
            });
            const editModal = new bootstrap.Modal(document.getElementById('editVideoCourseModal'));
            editModal.show();
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Une erreur est survenue lors de la récupération des détails du cours');
        });
    }

    // Fonction pour ajouter un formulaire de session dans le modal d'édition
    function addEditSessionForm(container, session = null, index) {
        const sessionDiv = document.createElement('div');
        sessionDiv.classList.add('session', 'mb-3');
        sessionDiv.innerHTML = `
            <h4>Session ${index + 1}</h4>
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label class="form-label">Date</label>
                    <input type="datetime-local" class="form-control" name="sessionDate" required value="${session ? new Date(session.date).toISOString().slice(0, 16) : ''}">
                </div>
                <div class="col-md-6 mb-3">
                    <label class="form-label">Durée (en minutes)</label>
                    <input type="number" class="form-control" name="sessionDuration" required value="${session ? session.duration : ''}">
                </div>
            </div>
            <div class="mb-3">
                <label class="form-label">Détails</label>
                <textarea class="form-control" name="sessionDetails" rows="3" required>${session ? session.details : ''}</textarea>
            </div>
        `;
        container.appendChild(sessionDiv);
    }

    // Ajouter une nouvelle session dans le formulaire d'édition
    document.getElementById('addEditSession').addEventListener('click', function() {
        const sessionsContainer = document.getElementById('editSessions');
        addEditSessionForm(sessionsContainer, null, sessionsContainer.children.length);
    });

    // Sauvegarder les modifications du cours vidéo
    document.getElementById('saveEditVideoCourse').addEventListener('click', function() {
        const courseId = document.getElementById('editCourseId').value;
        const courseTitle = document.getElementById('editCourseTitle').value;
        const sessions = Array.from(document.getElementById('editSessions').children).map(sessionDiv => {
            return {
                date: sessionDiv.querySelector('[name="sessionDate"]').value,
                duration: parseInt(sessionDiv.querySelector('[name="sessionDuration"]').value),
                details: sessionDiv.querySelector('[name="sessionDetails"]').value
            };
        });

        fetch(`/update-video-course/${courseId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ courseTitle, sessions })
        })
        .then(response => response.json())
        .then(data => {
            if (data.message === 'Cours vidéo mis à jour avec succès') {
                alert('Cours vidéo mis à jour avec succès');
                location.reload(); // Recharger la page pour afficher les modifications
            } else {
                alert('Erreur lors de la mise à jour du cours vidéo');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Une erreur est survenue lors de la mise à jour du cours vidéo');
        });
    });
});


    </script>
</body>
</html>